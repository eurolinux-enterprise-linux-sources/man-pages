diff -urN man-pages-3.22.orig/man7/ip.7 man-pages-3.22/man7/ip.7
--- man-pages-3.22.orig/man7/ip.7	2012-09-25 13:56:01.627920855 +0200
+++ man-pages-3.22/man7/ip.7	2012-09-25 14:05:13.719654756 +0200
@@ -207,7 +207,7 @@
 .\" Since Linux 2.4.0-test10
 .\"
 .TP
-.B IP_ADD_MEMBERSHIP " (since Linux 1.2)"
+.BR IP_ADD_MEMBERSHIP " (since Linux 1.2)"
 Join a multicast group.
 Argument is an
 .I ip_mreqn
@@ -259,6 +259,58 @@
 .BR setsockopt (2).
 .\"
 .TP
+.BR IP_ADD_SOURCE_MEMBERSHIP " (since Linux 2.5.68)"
+Join a multicast group and allow receiving data only
+from a specified source.
+Argument is an
+.I ip_mreq_source
+structure.
+.sp
+.in +4n
+.nf
+struct ip_mreq_source {
+    struct in_addr imr_multiaddr;  /* IP multicast group
+                                      address */
+    struct in_addr imr_interface;  /* IP address of local
+                                      interface */
+    struct in_addr imr_sourceaddr; /* IP address of
+                                      multicast source */
+};
+.fi
+.in
+.sp
+.I ip_mreq_source
+structure is similar to
+.I ip_mreqn
+described at
+.BR IP_ADD_MEMBERSIP .
+.I imr_multiaddr
+contains the address of the multicast group the application
+wants to join or leave.
+.I imr_interface
+is the address of the local interface with which
+the system should join the multicast group.
+Finally
+.I imr_sourceaddr
+field contains address of the source the
+application wants to receive data from.
+.IP
+This option can be used multiple times to allow
+receiving data from more than one source.
+.TP
+.BR IP_BLOCK_SOURCE " (since Linux 2.5.68)"
+Stop receiving multicast data from a specific source in a given
+group. This is valid only after the application has subscribed
+to the multicast group using either
+.BR IP_ADD_MEMBERSHIP
+or
+.BR IP_ADD_SOURCE_MEMBERSHIP .
+.IP
+Argument is an
+.I ip_mreq_source
+structure as described at
+.BR IP_ADD_SOURCE_MEMBERSHIP .
+.TP
 .BR IP_DROP_MEMBERSHIP " (since Linux 1.2)"
 Leave a multicast group.
 Argument is an
@@ -268,6 +320,32 @@
 structure similar to
 .BR IP_ADD_MEMBERSHIP .
 .TP
+.BR IP_DROP_SOURCE_MEMBERSHIP " (since Linux 2.5.68)"
+Leave a source-specific group, i.e., stop receiving data from
+a given multicast group that come from a given source).
+If the application has subscribed to multiple sources within
+the same group, data from the remaining sources will still be
+delivered. To stop receiving data from all sources at once use
+.BR IP_LEAVE_GROUP .
+.IP
+Argument is an
+.I ip_mreq_source
+structure as described at
+.BR IP_ADD_SOURCE_MEMBERSHIP .
+.TP
+.BR IP_FREEBIND " (since Linux 2.4)"
+.\" Precisely: 2.4.0-test10
+If enabled, this boolean option allows binding to an IP address
+that is nonlocal or does not (yet) exist.
+This permits listening on a socket,
+without requiring the underlying network interface or the
+specified dynamic IP address to be up at the time that
+the application is trying to bind to it.
+This option is the per-socket equivalent of the
+.IR ip_nonlocal_bind
+.I /proc
+interface described below.
+.TP
 .BR IP_HDRINCL " (since Linux 2.0)"
 If enabled,
 the user supplies an IP header in front of the user data.
@@ -283,6 +361,45 @@
 and
 .B IP_TOS
 are ignored.
+.TP
+.BR IP_MSFILTER " (since Linux 2.5.68)"
+This option provides access to the advanced full-state filtering API.
+Argument is an
+.I ip_msfilter
+structure.
+.sp
+.in +4n
+.nf
+struct ip_msfilter {
+    struct in_addr imsf_multiaddr; /* IP multicast group
+                                      address */
+    struct in_addr imsf_interface; /* IP address of local
+                                      interface */
+    uint32_t       imsf_fmode;     /* Filter-mode */
+
+    uint32_t       imsf_numsrc;    /* Number of sources in
+                                      the following array */
+    struct in_addr imsf_slist[1];  /* Array of source
+                                      addresses */
+};
+.fi
+.in
+.sp
+There are two macros,
+.BR MCAST_INCLUDE
+and
+.BR MCAST_EXCLUDE ,
+which can be used to specify the filtering mode.
+Additionaly,
+.BR IP_MSFILTER_SIZE (n)
+macro exists to determine how much memory is needed to store
+.I ip_msfilter
+structure with
+.I n
+sources in the source list.
+.IP
+For the full description of multicast source filtering
+refer to RFC 3376.
 .\" FIXME Document IP_IPSEC_POLICY
 .\" Since Linux 2.5.47
 .\" Needs CAP_NET_ADMIN
@@ -313,8 +430,7 @@
 in MTU sized chunks and to do the retransmits if necessary.
 The kernel will reject packets that are bigger than the known
 path MTU if this flag is set (with
-.B EMSGSIZE
-).
+.BR EMSGSIZE ).
 .TS
 tab(:);
 c l
@@ -373,6 +489,17 @@
 that wish to deliberately send probe packets larger than
 the observed Path MTU.
 .TP
+.BR IP_MULTICAST_ALL " (since Linux 2.6.31)"
+Sets the policy for multicast delivery to the socket. Argument is a boolean
+integer that enables or disables multicast delivery from all groups.
+If not set, delivery to the socket is restricted to data from those multicast
+groups that have been explicitly subscribed to via a multicast join operation
+for this socket. The default is 1 which means that a socket which is bound
+to the wildcard address
+.RB ( INADDR_ANY )
+will receive multicast packets from all
+groups that have been subscribed to on this system.
+.TP
 .BR IP_MULTICAST_IF " (since Linux 1.2)"
 Set the local device for a multicast socket.
 Argument is an
@@ -632,6 +759,17 @@
 .B SOCK_STREAM
 sockets.
 .TP
+.BR IP_RECVORIGDSTADDR " (since Linux 2.6.29)"
+.\" commit e8b2dfe9b4501ed0047459b2756ba26e5a940a69
+This boolean option enables the
+.B IP_ORIGDSTADDR
+ancillary message in
+.BR recvmsg (2),
+in which the kernel returns the original destination address
+of the datagram being received.
+The ancillary message contains a
+.IR "struct sockaddr_in" .
+.TP
 .BR IP_RECVTOS " (since Linux 2.2)"
 .\" Precisely: 2.1.68
 If enabled the
@@ -705,9 +843,39 @@
 .\" commit f5715aea4564f233767ea1d944b2637a5fd7cd2e
 .\" Author: KOVACS Krisztian <hidden@sch.bme.hu>
 .TP
+.BR IP_TRANSPARENT " (since Linux 2.6.24)"
+.\" commit f5715aea4564f233767ea1d944b2637a5fd7cd2e
+.\"     This patch introduces the IP_TRANSPARENT socket option: enabling that
+.\"     will make the IPv4 routing omit the non-local source address check on
+.\"     output. Setting IP_TRANSPARENT requires NET_ADMIN capability.
+.\" http://lwn.net/Articles/252545/
+Setting this boolean option enables transparent proxying on this socket.
+This socket option allows
+the calling application to bind to a nonlocal IP address and operate
+both as a client and a server with the foreign address as the local endpoint.
+NOTE: this requires that routing be set up in a way that
+packets going to the foreign address are routed through the TProxy box.
+Enabling this socket option requires superuser privileges
+(the
+.BR CAP_NET_ADMIN
+capability).
+.IP
+TProxy redirection with the iptables TPROXY target also requires that
+this option be set on the redirected socket.
+.TP
 .BR IP_TTL " (since Linux 1.0)"
 Set or retrieve the current time-to-live field that is used in every packet
 sent from this socket.
+.TP
+.BR IP_UNBLOCK_SOURCE " (since Linux 2.5.68)"
+Unblock previously blocked multicast source. Returns
+.BR EADDRNOTAVAIL
+when given source is not being blocked.
+.IP
+Argument is an
+.I ip_mreq_source
+structure as described at
+.BR IP_ADD_SOURCE_MEMBERSHIP .
 .\" FIXME Document IP_XFRM_POLICY
 .\" Since Linux 2.5.48
 .\" Needs CAP_NET_ADMIN
@@ -944,12 +1112,16 @@
 and
 .BR socket (7).
 .SH NOTES
+.BR IP_FREEBIND ,
+.BR IP_MSFILTER ,
 .BR IP_MTU ,
 .BR IP_MTU_DISCOVER ,
+.BR IP_RECVORIGDSTADDR ,
 .BR IP_PKTINFO ,
-.B IP_RECVERR
+.BR IP_RECVERR ,
+.BR IP_ROUTER_ALERT ,
 and
-.B IP_ROUTER_ALERT
+.BR IP_TRANSPARENT
 are Linux-specific and should not be used in
 programs intended to be portable.
 .\" IP_PASSSEC is Linux-specific
